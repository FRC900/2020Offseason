#include "spline_util/spline_util.h"
#include "base_trajectory/cuda_utils.h"
#include "base_trajectory/sample_trajectory.h"

#include <chrono>
#include <ros/console.h>
using std::chrono::high_resolution_clock;
using std::chrono::duration_cast;
using std::chrono::duration;
using std::chrono::milliseconds;

constexpr const double distBetweenArcLengths = 0.035;
constexpr const double distBetweenArcLengthEpsilon = 0.01;
constexpr const double midTimeInflation = 1.25;

template <class T>
std::pair<std::string, double>testSampleTrajectory(SampleTrajectoryType type,
		const std::string &name,
		XYTTrajectory<T> trajectory,
		ArcLengthTrajectory<T> arcLengthTrajectory)
{
    ROS_INFO_STREAM(__FUNCTION__ << " " << name << " starting ");
	std::vector<T> equalArcLengthTimesCuda;
	std::vector<T> equalArcLengthPositionsCuda;
	std::vector<SegmentState<T>> xStatesCuda;
	std::vector<SegmentState<T>> yStatesCuda;
	std::vector<SegmentState<T>> thetaStatesCuda;
	SampleTrajectory<T> st
		( distBetweenArcLengths,
		 distBetweenArcLengthEpsilon,
		 midTimeInflation,
		 type);

    auto t1 = high_resolution_clock::now();
	for (size_t i = 0; i < 20000; i++)
	{
		st.sample(equalArcLengthTimesCuda,
				equalArcLengthPositionsCuda,
				xStatesCuda,
				yStatesCuda,
				thetaStatesCuda,
				trajectory,
				arcLengthTrajectory);
	}
    auto t2 = high_resolution_clock::now();
    const duration<double, std::milli> ms_double = t2 - t1;
    ROS_INFO_STREAM(__FUNCTION__ << " " << name << " : " << ms_double.count() << " mSec");

	for (size_t i = 0; i < equalArcLengthTimesCuda.size(); i++)
		std::cout << "equal arc length " << i
			<< " time = " << equalArcLengthTimesCuda[i]
			<< " position = " << equalArcLengthPositionsCuda[i]
			<< " coord = (" << xStatesCuda[i].position
			<< ", " << yStatesCuda[i].position
			<< ", " << thetaStatesCuda[i].position << ")"
			<< std::endl;
#if 0
	typename Segment<T>::State state;
	const auto it = trajectory_interface::sample(arcLengthTrajectory[0], 0.204538, state);
	std::cout << "state = " << state.position[0] << std::endl;
#endif
	return std::make_pair(name, ms_double.count());
}

template <class T>
void generateSimpleTrajectory(XYTTrajectory<T> &trajectory, ArcLengthTrajectory<T> &arcLengthTrajectory);
template <class T>
void generateBarrelRacingTrajectory(XYTTrajectory<T> &trajectory, ArcLengthTrajectory<T> &arcLengthTrajectory);
template <class T>
void generateGalacticSearchTrajectory(XYTTrajectory<T> &trajectory, ArcLengthTrajectory<T> &arcLengthTrajectory);
int main (void)
{
	using T = double;
	ArcLengthTrajectory<T> arcLengthTrajectory;
	XYTTrajectory<T> trajectory;
	std::vector<std::pair<std::string, double>> results;
	const bool hasGPU = hasCudaGPU();
	generateSimpleTrajectory(trajectory, arcLengthTrajectory);
	results.push_back(testSampleTrajectory( SampleTrajectoryType::CPU, "CPU", trajectory, arcLengthTrajectory));
	results.push_back(testSampleTrajectory( SampleTrajectoryType::THREADED, "THREADED", trajectory, arcLengthTrajectory));
	if (hasGPU)
	{
		results.push_back(testSampleTrajectory( SampleTrajectoryType::CUDA, "CUDA", trajectory, arcLengthTrajectory));
		results.push_back(testSampleTrajectory( SampleTrajectoryType::HYBRID, "HYBRID", trajectory, arcLengthTrajectory));
	}

	generateBarrelRacingTrajectory(trajectory, arcLengthTrajectory);
	results.push_back(testSampleTrajectory( SampleTrajectoryType::CPU, "CPU", trajectory, arcLengthTrajectory));
	results.push_back(testSampleTrajectory( SampleTrajectoryType::THREADED, "THREADED", trajectory, arcLengthTrajectory));
	if (hasGPU)
	{
		results.push_back(testSampleTrajectory( SampleTrajectoryType::CUDA, "CUDA", trajectory, arcLengthTrajectory));
		results.push_back(testSampleTrajectory( SampleTrajectoryType::HYBRID, "HYBRID", trajectory, arcLengthTrajectory));
	}

	generateGalacticSearchTrajectory(trajectory, arcLengthTrajectory);
	results.push_back(testSampleTrajectory( SampleTrajectoryType::CPU, "CPU", trajectory, arcLengthTrajectory));
	results.push_back(testSampleTrajectory( SampleTrajectoryType::THREADED, "THREADED", trajectory, arcLengthTrajectory));
	if (hasGPU)
	{
		results.push_back(testSampleTrajectory( SampleTrajectoryType::CUDA, "CUDA", trajectory, arcLengthTrajectory));
		results.push_back(testSampleTrajectory( SampleTrajectoryType::HYBRID, "HYBRID", trajectory, arcLengthTrajectory));
	}

	for (const auto &r : results)
		ROS_INFO_STREAM(r.first << " : " << r.second << " mSec");
	return 0;
}

template <class T>
void generateSimpleTrajectory(XYTTrajectory<T> &trajectory, ArcLengthTrajectory<T> &arcLengthTrajectory)
{
	// Simple obstacle avoidance path
	{
		std::vector<InitSplinePoints<T, 1>> points;
		InitSplinePoints<T, 1> isp;
		isp.state[0].position = 0;
		isp.state[0].velocity = 0;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 0;
		points.push_back(isp);
		isp.state[0].position = 0.258715;
		isp.state[0].velocity = 0.258715;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 0.25;
		points.push_back(isp);
		isp.state[0].position = 0.683396;
		isp.state[0].velocity = 0.424681;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 0.5;
		points.push_back(isp);
		isp.state[0].position = 1.59085;
		isp.state[0].velocity = 0.907455;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 1;
		points.push_back(isp);
		isp.state[0].position = 2.55012;
		isp.state[0].velocity = 0.469007;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 1.5;
		points.push_back(isp);
		isp.state[0].position = 3.01913;
		isp.state[0].velocity = 0.469007;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 1.75;
		points.push_back(isp);
		isp.state[0].position = 3.49759;
		isp.state[0].velocity = 0.478461;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 2;
		points.push_back(isp);
		isp.state[0].position = 4.00166;
		isp.state[0].velocity = 0.504069;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 2.25;
		points.push_back(isp);
		isp.state[0].position = 4.53409;
		isp.state[0].velocity = 0.532434;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 2.5;
		points.push_back(isp);
		isp.state[0].position = 5.067;
		isp.state[0].velocity = 0.532908;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 2.75;
		points.push_back(isp);
		isp.state[0].position = 5.66309;
		isp.state[0].velocity = 0.596093;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 3;
		points.push_back(isp);
		isp.state[0].position = 6.60775;
		isp.state[0].velocity = 0.944654;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 3.25;
		points.push_back(isp);
		isp.state[0].position = 7.94016;
		isp.state[0].velocity = 1.24765;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 3.5;
		points.push_back(isp);
		isp.state[0].position = 9.18781;
		isp.state[0].velocity = 0.531816;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 3.75;
		points.push_back(isp);
		isp.state[0].position = 9.71963;
		isp.state[0].velocity = 0;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 4;
		points.push_back(isp);

		initSpline(arcLengthTrajectory, points);
	}

	{
		std::vector<InitSplinePoints<T, 3>> points;
		InitSplinePoints<T, 3> isp;
		isp.state[0].position = 0;
		isp.state[0].velocity = 0;
		isp.state[0].acceleration = 13.1286;
		isp.state[1].position = 0;
		isp.state[1].velocity = 0;
		isp.state[1].acceleration = 1.52205;
		isp.state[2].position = 0;
		isp.state[2].velocity = 0;
		isp.state[2].acceleration = 0;
		isp.time_from_start = 0;
		points.push_back(isp);
		isp.state[0].position = 1.57568;
		isp.state[0].velocity = 1.83728;
		isp.state[0].acceleration = -1.85303;
		isp.state[1].position = 0;
		isp.state[1].velocity = 0.761027;
		isp.state[1].acceleration = 2.27486;
		isp.state[2].position = 0;
		isp.state[2].velocity = 0;
		isp.state[2].acceleration = 0;
		isp.time_from_start = 1;
		points.push_back(isp);
		isp.state[0].position = 3.1892;
		isp.state[0].velocity = 1.94076;
		isp.state[0].acceleration = 0.469183;
		isp.state[1].position = 1;
		isp.state[1].velocity = 0.803888;
		isp.state[1].acceleration = -0.280368;
		isp.state[2].position = 0;
		isp.state[2].velocity = 0;
		isp.state[2].acceleration = 0;
		isp.time_from_start = 2;
		points.push_back(isp);
		isp.state[0].position = 5.26011;
		isp.state[0].velocity = 2.82245;
		isp.state[0].acceleration = 5.65396;
		isp.state[1].position = 1.542;
		isp.state[1].velocity = -0.395298;
		isp.state[1].acceleration = -4.76375;
		isp.state[2].position = 0;
		isp.state[2].velocity = 0;
		isp.state[2].acceleration = 0;
		isp.time_from_start = 3;
		points.push_back(isp);
		isp.state[0].position = 9;
		isp.state[0].velocity = 0;
		isp.state[0].acceleration = -16.7944;
		isp.state[1].position = 0;
		isp.state[1].velocity = -0;
		isp.state[1].acceleration = 8.46141;
		isp.state[2].position = 0;
		isp.state[2].velocity = 0;
		isp.state[2].acceleration = 0;
		isp.time_from_start = 4;
		points.push_back(isp);

		initSpline(trajectory, points);
	}
}
	template <class T>
void generateBarrelRacingTrajectory(XYTTrajectory<T> &trajectory, ArcLengthTrajectory<T> &arcLengthTrajectory)
{// Path from barrel racing
	{
		std::vector<InitSplinePoints<T, 1>> points;
		InitSplinePoints<T, 1> isp;
		isp.state[0].position = 0;
		isp.state[0].velocity = 0;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 0;
		points.push_back(isp);
		isp.state[0].position = 0.432504;
		isp.state[0].velocity = 0.432504;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 0.21875;
		points.push_back(isp);
		isp.state[0].position = 1.31008;
		isp.state[0].velocity = 0.877576;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 0.4375;
		points.push_back(isp);
		isp.state[0].position = 2.98236;
		isp.state[0].velocity = 1.47518;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 0.875;
		points.push_back(isp);
		isp.state[0].position = 4.45754;
		isp.state[0].velocity = 1.47518;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 1.3125;
		points.push_back(isp);
		isp.state[0].position = 6.23593;
		isp.state[0].velocity = 0.521137;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 1.75;
		points.push_back(isp);
		isp.state[0].position = 6.75706;
		isp.state[0].velocity = 0.369317;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 1.96875;
		points.push_back(isp);
		isp.state[0].position = 7.12638;
		isp.state[0].velocity = 0.369317;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 2.1875;
		points.push_back(isp);
		isp.state[0].position = 8.0208;
		isp.state[0].velocity = 0.894419;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 2.40625;
		points.push_back(isp);
		isp.state[0].position = 9.10508;
		isp.state[0].velocity = 0.770659;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 2.625;
		points.push_back(isp);
		isp.state[0].position = 9.87574;
		isp.state[0].velocity = 0.303569;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 2.84375;
		points.push_back(isp);
		isp.state[0].position = 10.1793;
		isp.state[0].velocity = 0.197943;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 3.0625;
		points.push_back(isp);
		isp.state[0].position = 10.3773;
		isp.state[0].velocity = 0.197943;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 3.28125;
		points.push_back(isp);
		isp.state[0].position = 10.7106;
		isp.state[0].velocity = 0.333307;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 3.5;
		points.push_back(isp);
		isp.state[0].position = 11.0988;
		isp.state[0].velocity = 0.307506;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 3.71875;
		points.push_back(isp);
		isp.state[0].position = 11.4063;
		isp.state[0].velocity = 0.265969;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 3.9375;
		points.push_back(isp);
		isp.state[0].position = 11.6723;
		isp.state[0].velocity = 0.265969;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 4.15625;
		points.push_back(isp);
		isp.state[0].position = 12.3281;
		isp.state[0].velocity = 0.655802;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 4.375;
		points.push_back(isp);
		isp.state[0].position = 13.2638;
		isp.state[0].velocity = 0.754413;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 4.59375;
		points.push_back(isp);
		isp.state[0].position = 14.0182;
		isp.state[0].velocity = 0.354988;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 4.8125;
		points.push_back(isp);
		isp.state[0].position = 14.3732;
		isp.state[0].velocity = 0.294054;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 5.03125;
		points.push_back(isp);
		isp.state[0].position = 14.6672;
		isp.state[0].velocity = 0.294054;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 5.25;
		points.push_back(isp);
		isp.state[0].position = 15.095;
		isp.state[0].velocity = 0.427823;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 5.46875;
		points.push_back(isp);
		isp.state[0].position = 15.5436;
		isp.state[0].velocity = 0.29744;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 5.6875;
		points.push_back(isp);
		isp.state[0].position = 15.8411;
		isp.state[0].velocity = 0.173849;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 5.90625;
		points.push_back(isp);
		isp.state[0].position = 16.0149;
		isp.state[0].velocity = 0.173849;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 6.125;
		points.push_back(isp);
		isp.state[0].position = 16.2372;
		isp.state[0].velocity = 0.222243;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 6.34375;
		points.push_back(isp);
		isp.state[0].position = 16.508;
		isp.state[0].velocity = 0.251776;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 6.5625;
		points.push_back(isp);
		isp.state[0].position = 16.7597;
		isp.state[0].velocity = 0.182899;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 6.78125;
		points.push_back(isp);
		isp.state[0].position = 16.9426;
		isp.state[0].velocity = 0.182899;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 7;
		points.push_back(isp);
		isp.state[0].position = 17.1765;
		isp.state[0].velocity = 0.233838;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 7.21875;
		points.push_back(isp);
		isp.state[0].position = 17.5984;
		isp.state[0].velocity = 0.421944;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 7.4375;
		points.push_back(isp);
		isp.state[0].position = 18.0657;
		isp.state[0].velocity = 0.313747;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 7.65625;
		points.push_back(isp);
		isp.state[0].position = 18.3794;
		isp.state[0].velocity = 0.138377;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 7.875;
		points.push_back(isp);
		isp.state[0].position = 18.5178;
		isp.state[0].velocity = 0.138377;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 8.09375;
		points.push_back(isp);
		isp.state[0].position = 18.672;
		isp.state[0].velocity = 0.154221;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 8.3125;
		points.push_back(isp);
		isp.state[0].position = 18.8768;
		isp.state[0].velocity = 0.192626;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 8.53125;
		points.push_back(isp);
		isp.state[0].position = 19.0694;
		isp.state[0].velocity = 0.133931;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 8.75;
		points.push_back(isp);
		isp.state[0].position = 19.2033;
		isp.state[0].velocity = 0.0759583;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 8.96875;
		points.push_back(isp);
		isp.state[0].position = 19.2793;
		isp.state[0].velocity = 0.0759583;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 9.07812;
		points.push_back(isp);
		isp.state[0].position = 19.4819;
		isp.state[0].velocity = 0.202647;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 9.1875;
		points.push_back(isp);
		isp.state[0].position = 19.8716;
		isp.state[0].velocity = 0.389668;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 9.29688;
		points.push_back(isp);
		isp.state[0].position = 20.4223;
		isp.state[0].velocity = 0.550725;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 9.40625;
		points.push_back(isp);
		isp.state[0].position = 21.0547;
		isp.state[0].velocity = 0.611103;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 9.51562;
		points.push_back(isp);
		isp.state[0].position = 21.6658;
		isp.state[0].velocity = 0.492383;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 9.625;
		points.push_back(isp);
		isp.state[0].position = 22.1582;
		isp.state[0].velocity = 0.311135;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 9.73438;
		points.push_back(isp);
		isp.state[0].position = 22.4694;
		isp.state[0].velocity = 0.131709;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 9.84375;
		points.push_back(isp);
		isp.state[0].position = 22.6011;
		isp.state[0].velocity = 0.0435102;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 9.95312;
		points.push_back(isp);
		isp.state[0].position = 22.6446;
		isp.state[0].velocity = 0.0435102;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 10.0625;
		points.push_back(isp);
		isp.state[0].position = 22.7317;
		isp.state[0].velocity = 0.0871395;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 10.2812;
		points.push_back(isp);
		isp.state[0].position = 22.8635;
		isp.state[0].velocity = 0.131772;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 10.5;
		points.push_back(isp);
		isp.state[0].position = 23.006;
		isp.state[0].velocity = 0.101142;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 10.7188;
		points.push_back(isp);
		isp.state[0].position = 23.1072;
		isp.state[0].velocity = 0.101142;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 10.9375;
		points.push_back(isp);
		isp.state[0].position = 23.2199;
		isp.state[0].velocity = 0.112674;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 11.1562;
		points.push_back(isp);
		isp.state[0].position = 23.5286;
		isp.state[0].velocity = 0.308761;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 11.375;
		points.push_back(isp);
		isp.state[0].position = 23.9995;
		isp.state[0].velocity = 0.449131;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 11.5938;
		points.push_back(isp);
		isp.state[0].position = 24.4487;
		isp.state[0].velocity = 0.164352;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 11.8125;
		points.push_back(isp);
		isp.state[0].position = 24.613;
		isp.state[0].velocity = 0.130964;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 11.9219;
		points.push_back(isp);
		isp.state[0].position = 24.744;
		isp.state[0].velocity = 0.130964;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 12.0312;
		points.push_back(isp);
		isp.state[0].position = 24.8962;
		isp.state[0].velocity = 0.15218;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 12.1406;
		points.push_back(isp);
		isp.state[0].position = 25.1151;
		isp.state[0].velocity = 0.21897;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 12.25;
		points.push_back(isp);
		isp.state[0].position = 25.3982;
		isp.state[0].velocity = 0.28302;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 12.3594;
		points.push_back(isp);
		isp.state[0].position = 25.7176;
		isp.state[0].velocity = 0.319465;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 12.4688;
		points.push_back(isp);
		isp.state[0].position = 26.0374;
		isp.state[0].velocity = 0.286833;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 12.5781;
		points.push_back(isp);
		isp.state[0].position = 26.3243;
		isp.state[0].velocity = 0.233567;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 12.6875;
		points.push_back(isp);
		isp.state[0].position = 26.5578;
		isp.state[0].velocity = 0.183064;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 12.7969;
		points.push_back(isp);
		isp.state[0].position = 26.7409;
		isp.state[0].velocity = 0.168847;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 12.9062;
		points.push_back(isp);
		isp.state[0].position = 26.9097;
		isp.state[0].velocity = 0.168847;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 13.0156;
		points.push_back(isp);
		isp.state[0].position = 27.1556;
		isp.state[0].velocity = 0.245894;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 13.125;
		points.push_back(isp);
		isp.state[0].position = 27.5877;
		isp.state[0].velocity = 0.432086;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 13.2344;
		points.push_back(isp);
		isp.state[0].position = 28.2377;
		isp.state[0].velocity = 0.650001;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 13.3438;
		points.push_back(isp);
		isp.state[0].position = 29.0676;
		isp.state[0].velocity = 0.829865;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 13.4531;
		points.push_back(isp);
		isp.state[0].position = 29.9903;
		isp.state[0].velocity = 0.900379;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 13.5625;
		points.push_back(isp);
		isp.state[0].position = 30.8907;
		isp.state[0].velocity = 0.755743;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 13.6719;
		points.push_back(isp);
		isp.state[0].position = 31.6464;
		isp.state[0].velocity = 0.502524;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 13.7812;
		points.push_back(isp);
		isp.state[0].position = 32.1489;
		isp.state[0].velocity = 0.175378;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 13.8906;
		points.push_back(isp);
		isp.state[0].position = 32.3243;
		isp.state[0].velocity = 0;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 14;
		points.push_back(isp);

		initSpline(arcLengthTrajectory, points);
	}
	{
		std::vector<InitSplinePoints<T, 3>> points;
		InitSplinePoints<T, 3> isp;
		isp.state[0].position = 0;
		isp.state[0].velocity = 0;
		isp.state[0].acceleration = 23.7836;
		isp.state[1].position = 0;
		isp.state[1].velocity = 0;
		isp.state[1].acceleration = -4.14597;
		isp.state[2].position = 0;
		isp.state[2].velocity = 0;
		isp.state[2].acceleration = -0.000401851;
		isp.time_from_start = 0;
		points.push_back(isp);
		isp.state[0].position = 3.26394;
		isp.state[0].velocity = 2.10001;
		isp.state[0].acceleration = -6.74331;
		isp.state[1].position = 0.00789454;
		isp.state[1].velocity = -2.09667;
		isp.state[1].acceleration = -9.05767;
		isp.state[2].position = 0;
		isp.state[2].velocity = -0.000200925;
		isp.state[2].acceleration = 0.00018365;
		isp.time_from_start = 1;
		points.push_back(isp);
		isp.state[0].position = 4.03067;
		isp.state[0].velocity = -0.825989;
		isp.state[0].acceleration = -7.24144;
		isp.state[1].position = -3.28211;
		isp.state[1].velocity = -0.825105;
		isp.state[1].acceleration = 13.1819;
		isp.state[2].position = 0;
		isp.state[2].velocity = -0.000200925;
		isp.state[2].acceleration = 1.82011e-05;
		isp.time_from_start = 2;
		points.push_back(isp);
		isp.state[0].position = 1.43455;
		isp.state[0].velocity = -0.799725;
		isp.state[0].acceleration = 5.29087;
		isp.state[1].position = -1.28128;
		isp.state[1].velocity = 0.607779;
		isp.state[1].acceleration = -0.540518;
		isp.state[2].position = 0;
		isp.state[2].velocity = -0.000200925;
		isp.state[2].acceleration = 0.000519237;
		isp.time_from_start = 3;
		points.push_back(isp);
		isp.state[0].position = 1.62536;
		isp.state[0].velocity = 0.607779;
		isp.state[0].acceleration = 3.64905;
		isp.state[1].position = 0.00891256;
		isp.state[1].velocity = 0.799725;
		isp.state[1].acceleration = -3.39858;
		isp.state[2].position = 0;
		isp.state[2].velocity = -0.000200925;
		isp.state[2].acceleration = -0.000446494;
		isp.time_from_start = 4;
		points.push_back(isp);
		isp.state[0].position = 4.46394;
		isp.state[0].velocity = 1.16381;
		isp.state[0].acceleration = -1.74846;
		isp.state[1].position = 0.00749269;
		isp.state[1].velocity = 0.173803;
		isp.state[1].acceleration = 1.37004;
		isp.state[2].position = 0;
		isp.state[2].velocity = -0.000200925;
		isp.state[2].acceleration = 0.00034727;
		isp.time_from_start = 5;
		points.push_back(isp);
		isp.state[0].position = 5.96418;
		isp.state[0].velocity = 0.446182;
		isp.state[0].acceleration = -2.34377;
		isp.state[1].position = 0.466689;
		isp.state[1].velocity = 0.602844;
		isp.state[1].acceleration = 1.54505;
		isp.state[2].position = 0;
		isp.state[2].velocity = -0.000200925;
		isp.state[2].acceleration = 0.000266995;
		isp.time_from_start = 6;
		points.push_back(isp);
		isp.state[0].position = 5.96472;
		isp.state[0].velocity = -0.530046;
		isp.state[0].acceleration = -3.12586;
		isp.state[1].position = 1.46669;
		isp.state[1].velocity = 0.530614;
		isp.state[1].acceleration = -2.19345;
		isp.state[2].position = 0;
		isp.state[2].velocity = -0.000200925;
		isp.state[2].acceleration = -0.000241111;
		isp.time_from_start = 7;
		points.push_back(isp);
		isp.state[0].position = 4.46472;
		isp.state[0].velocity = -0.455863;
		isp.state[0].acceleration = 2.06314;
		isp.state[1].position = 1.46749;
		isp.state[1].velocity = -0.32089;
		isp.state[1].acceleration = -1.30093;
		isp.state[2].position = 0;
		isp.state[2].velocity = -0.000200925;
		isp.state[2].acceleration = 0.000406649;
		isp.time_from_start = 8;
		points.push_back(isp);
		isp.state[0].position = 4.21434;
		isp.state[0].velocity = 0.133311;
		isp.state[0].acceleration = 3.39244;
		isp.state[1].position = 0.767627;
		isp.state[1].velocity = -0.541303;
		isp.state[1].acceleration = -0.898934;
		isp.state[2].position = 0;
		isp.state[2].velocity = -0.000200925;
		isp.state[2].acceleration = -0.000772696;
		isp.time_from_start = 9;
		points.push_back(isp);
		isp.state[0].position = 6.71311;
		isp.state[0].velocity = 0.349294;
		isp.state[0].acceleration = -0.790204;
		isp.state[1].position = -1.53371;
		isp.state[1].velocity = -0.136449;
		isp.state[1].acceleration = 1.59024;
		isp.state[2].position = 0;
		isp.state[2].velocity = -0.000200925;
		isp.state[2].acceleration = 0.000896203;
		isp.time_from_start = 10;
		points.push_back(isp);
		isp.state[0].position = 7.21311;
		isp.state[0].velocity = 0.273759;
		isp.state[0].acceleration = -0.643956;
		isp.state[1].position = -1.53398;
		isp.state[1].velocity = 0.256283;
		isp.state[1].acceleration = 2.16601;
		isp.state[2].position = 0;
		isp.state[2].velocity = -0.000200925;
		isp.state[2].acceleration = -0.000615533;
		isp.time_from_start = 11;
		points.push_back(isp);
		isp.state[0].position = 7.31394;
		isp.state[0].velocity = -0.791015;
		isp.state[0].acceleration = -4.59601;
		isp.state[1].position = 0.00596566;
		isp.state[1].velocity = 0.844953;
		isp.state[1].acceleration = -4.52301;
		isp.state[2].position = 0;
		isp.state[2].velocity = -0.000200925;
		isp.state[2].acceleration = -0.000198058;
		isp.time_from_start = 12;
		points.push_back(isp);
		isp.state[0].position = 5.16394;
		isp.state[0].velocity = -1.6125;
		isp.state[0].acceleration = -3.92974;
		isp.state[1].position = 0.00711763;
		isp.state[1].velocity = 0.000863979;
		isp.state[1].acceleration = 1.21271;
		isp.state[2].position = 0;
		isp.state[2].velocity = -0.000200925;
		isp.state[2].acceleration = -0.000636396;
		isp.time_from_start = 13;
		points.push_back(isp);
		isp.state[0].position = -0.276063;
		isp.state[0].velocity = -0;
		isp.state[0].acceleration = 29.415;
		isp.state[1].position = 0.0100324;
		isp.state[1].velocity = 0;
		isp.state[1].acceleration = -0.0157606;
		isp.state[2].position = 0;
		isp.state[2].velocity = 0;
		isp.state[2].acceleration = -0.000401851;
		isp.time_from_start = 14;
		points.push_back(isp);
		initSpline(trajectory, points);
	}
}
	template <class T>
void generateGalacticSearchTrajectory(XYTTrajectory<T> &trajectory, ArcLengthTrajectory<T> &arcLengthTrajectory)
{
	{
		std::vector<InitSplinePoints<T, 1>> points;
		InitSplinePoints<T, 1> isp;
		isp.state[0].position = 0;
		isp.state[0].velocity = 0;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 0;
		points.push_back(isp);
		isp.state[0].position = 0.206724;
		isp.state[0].velocity = 0.206724;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 0.3125;
		points.push_back(isp);
		isp.state[0].position = 0.571687;
		isp.state[0].velocity = 0.208567;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 0.625;
		points.push_back(isp);
		isp.state[0].position = 0.780253;
		isp.state[0].velocity = 0.088717;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 0.9375;
		points.push_back(isp);
		isp.state[0].position = 0.86897;
		isp.state[0].velocity = 0.088717;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 1.25;
		points.push_back(isp);
		isp.state[0].position = 1.01029;
		isp.state[0].velocity = 0.11625;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 1.5625;
		points.push_back(isp);
		isp.state[0].position = 1.12654;
		isp.state[0].velocity = 0.0520294;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 1.875;
		points.push_back(isp);
		isp.state[0].position = 1.17857;
		isp.state[0].velocity = 0.0520294;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 2.1875;
		points.push_back(isp);
		isp.state[0].position = 1.2504;
		isp.state[0].velocity = 0.071831;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 2.5;
		points.push_back(isp);
		isp.state[0].position = 1.32249;
		isp.state[0].velocity = 0.0237091;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 2.8125;
		points.push_back(isp);
		isp.state[0].position = 1.3462;
		isp.state[0].velocity = 0.0237091;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 2.96875;
		points.push_back(isp);
		isp.state[0].position = 1.44679;
		isp.state[0].velocity = 0.100591;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 3.125;
		points.push_back(isp);
		isp.state[0].position = 2.06679;
		isp.state[0].velocity = 0.619999;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 3.28125;
		points.push_back(isp);
		isp.state[0].position = 3.28044;
		isp.state[0].velocity = 1.21365;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 3.4375;
		points.push_back(isp);
		isp.state[0].position = 4.73551;
		isp.state[0].velocity = 1.21066;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 3.59375;
		points.push_back(isp);
		isp.state[0].position = 5.94618;
		isp.state[0].velocity = 0.643563;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 3.75;
		points.push_back(isp);
		isp.state[0].position = 6.58974;
		isp.state[0].velocity = 0.205398;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 3.90625;
		points.push_back(isp);
		isp.state[0].position = 6.79514;
		isp.state[0].velocity = 0.177718;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 4.0625;
		points.push_back(isp);
		isp.state[0].position = 6.97286;
		isp.state[0].velocity = 0.0897151;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 4.375;
		points.push_back(isp);
		isp.state[0].position = 7.06257;
		isp.state[0].velocity = 0.0496867;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 4.6875;
		points.push_back(isp);
		isp.state[0].position = 7.11226;
		isp.state[0].velocity = 0.0496867;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 5;
		points.push_back(isp);
		isp.state[0].position = 7.17682;
		isp.state[0].velocity = 0.0645632;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 5.3125;
		points.push_back(isp);
		isp.state[0].position = 7.2542;
		isp.state[0].velocity = 0.0503601;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 5.625;
		points.push_back(isp);
		isp.state[0].position = 7.30456;
		isp.state[0].velocity = 0.0329421;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 5.9375;
		points.push_back(isp);
		isp.state[0].position = 7.3375;
		isp.state[0].velocity = 0.0329421;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 6.09375;
		points.push_back(isp);
		isp.state[0].position = 7.4939;
		isp.state[0].velocity = 0.1564;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 6.25;
		points.push_back(isp);
		isp.state[0].position = 7.82537;
		isp.state[0].velocity = 0.331471;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 6.40625;
		points.push_back(isp);
		isp.state[0].position = 8.26003;
		isp.state[0].velocity = 0.412497;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 6.5625;
		points.push_back(isp);
		isp.state[0].position = 8.67253;
		isp.state[0].velocity = 0.284302;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 6.71875;
		points.push_back(isp);
		isp.state[0].position = 8.95683;
		isp.state[0].velocity = 0.141908;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 6.875;
		points.push_back(isp);
		isp.state[0].position = 9.09874;
		isp.state[0].velocity = 0.0790245;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 7.03125;
		points.push_back(isp);
		isp.state[0].position = 9.17776;
		isp.state[0].velocity = 0.0790245;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 7.1875;
		points.push_back(isp);
		isp.state[0].position = 9.27367;
		isp.state[0].velocity = 0.09235;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 7.5;
		points.push_back(isp);
		isp.state[0].position = 9.36602;
		isp.state[0].velocity = 0.09235;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 7.8125;
		points.push_back(isp);
		isp.state[0].position = 9.47381;
		isp.state[0].velocity = 0.0884968;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 8.125;
		points.push_back(isp);
		isp.state[0].position = 9.5623;
		isp.state[0].velocity = 0.045104;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 8.4375;
		points.push_back(isp);
		isp.state[0].position = 9.60741;
		isp.state[0].velocity = 0.0127115;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 8.75;
		points.push_back(isp);
		isp.state[0].position = 9.62012;
		isp.state[0].velocity = 0.0127115;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 8.90625;
		points.push_back(isp);
		isp.state[0].position = 9.64536;
		isp.state[0].velocity = 0.0252391;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 9.0625;
		points.push_back(isp);
		isp.state[0].position = 9.7773;
		isp.state[0].velocity = 0.131939;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 9.21875;
		points.push_back(isp);
		isp.state[0].position = 10.1142;
		isp.state[0].velocity = 0.336951;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 9.375;
		points.push_back(isp);
		isp.state[0].position = 10.6298;
		isp.state[0].velocity = 0.515595;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 9.53125;
		points.push_back(isp);
		isp.state[0].position = 11.2185;
		isp.state[0].velocity = 0.531963;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 9.6875;
		points.push_back(isp);
		isp.state[0].position = 11.7505;
		isp.state[0].velocity = 0.376385;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 9.84375;
		points.push_back(isp);
		isp.state[0].position = 12.1269;
		isp.state[0].velocity = 0;
		isp.state[0].acceleration = 0;
		isp.time_from_start = 10;
		points.push_back(isp);
		initSpline(arcLengthTrajectory, points);
	}
	{
		std::vector<InitSplinePoints<T, 3>> points;
		InitSplinePoints<T, 3> isp;
		isp.state[0].position = 0;
		isp.state[0].velocity = 0;
		isp.state[0].acceleration = 5.27476;
		isp.state[1].position = 0;
		isp.state[1].velocity = 0;
		isp.state[1].acceleration = -0.632956;
		isp.state[2].position = 0;
		isp.state[2].velocity = 0;
		isp.state[2].acceleration = 0;
		isp.time_from_start = 0;
		points.push_back(isp);
		isp.state[0].position = 0.7918;
		isp.state[0].velocity = 0.261982;
		isp.state[0].acceleration = -0.606037;
		isp.state[1].position = -0.1;
		isp.state[1].velocity = -0.016478;
		isp.state[1].acceleration = 0.208637;
		isp.state[2].position = 0;
		isp.state[2].velocity = 0;
		isp.state[2].acceleration = 0;
		isp.time_from_start = 1;
		points.push_back(isp);
		isp.state[0].position = 1.1418;
		isp.state[0].velocity = 0.15;
		isp.state[0].acceleration = -0.130725;
		isp.state[1].position = -0.1;
		isp.state[1].velocity = 0;
		isp.state[1].acceleration = -0.119696;
		isp.state[2].position = 0;
		isp.state[2].velocity = 0;
		isp.state[2].acceleration = 0;
		isp.time_from_start = 2;
		points.push_back(isp);
		isp.state[0].position = 1.3418;
		isp.state[0].velocity = 0.123845;
		isp.state[0].acceleration = -0.0527191;
		isp.state[1].position = -0.1;
		isp.state[1].velocity = 0.0846308;
		isp.state[1].acceleration = 1.34747;
		isp.state[2].position = 0;
		isp.state[2].velocity = 0;
		isp.state[2].acceleration = 0;
		isp.time_from_start = 3;
		points.push_back(isp);
		isp.state[0].position = 3.2918;
		isp.state[0].velocity = 0.90723;
		isp.state[0].acceleration = -2.19592;
		isp.state[1].position = 4.9;
		isp.state[1].velocity = 0.619964;
		isp.state[1].acceleration = -4.00254;
		isp.state[2].position = 0;
		isp.state[2].velocity = 0;
		isp.state[2].acceleration = 0;
		isp.time_from_start = 4;
		points.push_back(isp);
		isp.state[0].position = 3.6418;
		isp.state[0].velocity = 0.15;
		isp.state[0].acceleration = 0.313891;
		isp.state[1].position = 4.9;
		isp.state[1].velocity = 0;
		isp.state[1].acceleration = 0.507642;
		isp.state[2].position = 0;
		isp.state[2].velocity = 0;
		isp.state[2].acceleration = 0;
		isp.time_from_start = 5;
		points.push_back(isp);
		isp.state[0].position = 3.8418;
		isp.state[0].velocity = 0.143217;
		isp.state[0].acceleration = 0.396202;
		isp.state[1].position = 4.9;
		isp.state[1].velocity = -0.0445966;
		isp.state[1].acceleration = -0.710617;
		isp.state[2].position = 0;
		isp.state[2].velocity = 0;
		isp.state[2].acceleration = 0;
		isp.time_from_start = 6;
		points.push_back(isp);
		isp.state[0].position = 5.2918;
		isp.state[0].velocity = 0.680281;
		isp.state[0].acceleration = -2.04575;
		isp.state[1].position = 3.9;
		isp.state[1].velocity = -0.211834;
		isp.state[1].acceleration = 1.54623;
		isp.state[2].position = 0;
		isp.state[2].velocity = 0;
		isp.state[2].acceleration = 0;
		isp.time_from_start = 7;
		points.push_back(isp);
		isp.state[0].position = 5.6418;
		isp.state[0].velocity = 0.35;
		isp.state[0].acceleration = -0.0779772;
		isp.state[1].position = 3.9;
		isp.state[1].velocity = 0;
		isp.state[1].acceleration = -0.154061;
		isp.state[2].position = 0;
		isp.state[2].velocity = 0;
		isp.state[2].acceleration = 0;
		isp.time_from_start = 8;
		points.push_back(isp);
		isp.state[0].position = 5.8418;
		isp.state[0].velocity = 0.15;
		isp.state[0].acceleration = 0.889083;
		isp.state[1].position = 3.9;
		isp.state[1].velocity = 0;
		isp.state[1].acceleration = 0.0107807;
		isp.state[2].position = 0;
		isp.state[2].velocity = 0;
		isp.state[2].acceleration = 0;
		isp.time_from_start = 9;
		points.push_back(isp);
		isp.state[0].position = 8.3368;
		isp.state[0].velocity = 1.81855;
		isp.state[0].acceleration = -7.3958;
		isp.state[1].position = 3.9;
		isp.state[1].velocity = -0.0726351;
		isp.state[1].acceleration = -0.29054;
		isp.state[2].position = 0;
		isp.state[2].velocity = 0;
		isp.state[2].acceleration = 0;
		isp.time_from_start = 10;
		points.push_back(isp);
		initSpline(trajectory, points);
	}
}
